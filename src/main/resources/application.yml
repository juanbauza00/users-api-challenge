spring:
  datasource:
    url: jdbc:postgresql://postgres:5432/${DB_NAME:userdb}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver

    # Configuraci√≥n del pool de conexiones
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      auto-commit: false  # IMPORTANTE: Permite control manual de transacciones

  # Config para transacciones
  transaction:
    default-timeout: 30
    rollback-on-commit-failure: true

app:
  batch:
    threshold: 10

server:
  port: 8080

kafka:
  bootstrap-servers: kafka1:9092
  schema-registry-url: http://schema-registry:8081

  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    acks: all
    retries: 3
    batch-size: 16384
    linger-ms: 5
    buffer-memory: 33554432

  consumer:
    group-id: client-batch-group
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    auto-offset-reset: earliest
    enable-auto-commit: false
    max-poll-records: 10

  topics:
    client-batch: client-batch-topic
